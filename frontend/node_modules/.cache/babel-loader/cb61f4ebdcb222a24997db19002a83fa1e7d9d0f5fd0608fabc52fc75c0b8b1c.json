{"ast":null,"code":"var _jsxFileName = \"E:\\\\porjects\\\\Ecomercs Web\\\\ecommerce-store\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create CartContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// CartProvider to manage and provide cart state\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]); // Initialize cart as an empty array\n\n  // Function to add items to the cart\n  const addToCart = product => {\n    setCart(prevCart => [...prevCart, product]);\n  };\n\n  // Function to remove items from the cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item._id !== productId));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to access cart context\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","product","prevCart","removeFromCart","productId","filter","item","_id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["E:/porjects/Ecomercs Web/ecommerce-store/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create CartContext\r\nexport const CartContext = createContext();\r\n\r\n// CartProvider to manage and provide cart state\r\nexport const CartProvider = ({ children }) => {\r\n    const [cart, setCart] = useState([]);  // Initialize cart as an empty array\r\n\r\n    // Function to add items to the cart\r\n    const addToCart = (product) => {\r\n        setCart((prevCart) => [...prevCart, product]);\r\n    };\r\n\r\n    // Function to remove items from the cart\r\n    const removeFromCart = (productId) => {\r\n        setCart((prevCart) => prevCart.filter((item) => item._id !== productId));\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{ cart, addToCart, removeFromCart }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to access cart context\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEvC;EACA,MAAMU,SAAS,GAAIC,OAAO,IAAK;IAC3BF,OAAO,CAAEG,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,OAAO,CAAC,CAAC;EACjD,CAAC;;EAED;EACA,MAAME,cAAc,GAAIC,SAAS,IAAK;IAClCL,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKH,SAAS,CAAC,CAAC;EAC5E,CAAC;EAED,oBACIX,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEE,SAAS;MAAEG;IAAe,CAAE;IAAAP,QAAA,EAC5DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAhB,EAAA,CApBaF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAqBzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACsB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}